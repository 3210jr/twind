name: CI

on:
  push:
    branches:
      # Push events on next branch
      - next

  pull_request:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  CI: true

jobs:
  build:
    timeout-minutes: 15
    name: Node v${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18.x']
        # os: [ubuntu-20.04]
        # Maybe add those later again
        # os: [ubuntu-20.04, macos-11, windows-2022]

    steps:
      - name: üì•  Checkout
        uses: actions/checkout@v2

      - name: üîß  Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.14.0

      - name: üîß  Use Node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: üí°  Environment Info
        run: |
          echo cwd: `pwd`;
          echo branch `git branch --show-current`;
          echo node `node --version`;
          echo pnpm `pnpm --version`

      - run: pnpm install --frozen-lockfile
      - run: pnpm check
      - run: pnpm test:coverage

      # either
      - run: pnpm build

      # Uses the root package.json['size-limit'] config
      - run: pnpm size-limit

      - name: üìñ  Coveralls
        # prevents this step from running on forks
        if: ${{ github.repository == 'tw-in-js/twind' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: build-${{ matrix.node }}
          parallel: true
          path-to-lcov: ./coverage/lcov.info

      # if a .npmrc file is found, the GitHub Action does not recreate the file.
      - name: üìù  Updating .npmrc
        # 1. prevents this step from running on forks
        # 2. only run for push events
        # 3. only run once in the matrix
        if: ${{ github.repository == 'tw-in-js/twind' && github.event_name == 'push' && matrix.node == '18.x' }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            email=release-workflow@twind.style
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: üì¶  Create Release Pull Request or Publish to npm
        id: changesets
        # 1. prevents this step from running on forks
        # 2. only run for push events
        # 3. only run once in the matrix
        if: ${{ github.repository == 'tw-in-js/twind' && github.event_name == 'push' && matrix.node == '18.x' }}
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure atleast one changeset exists
        if: ${{ steps.changesets.outputs.published == 'false' && steps.changesets.outputs.hasChangesets == 'false' && github.repository == 'tw-in-js/twind' && matrix.node == '18.x'}}
        continue-on-error: true
        run: pnpm changeset --empty

      - name: Publish to npm as pre-release (@next.<DATETIME>)
        if: ${{ steps.changesets.outputs.published == 'false' && github.repository == 'tw-in-js/twind' && github.event_name == 'push' && matrix.node == '18.x'}}
        continue-on-error: true
        run: |
          pnpm changeset version --no-git-tag --snapshot next --snapshot-prerelease-template "{tag}.{datetime}"
          pnpm install --lockfile-only --offline
          pnpm build
          pnpm release --tag next --no-git-checks

      - name: Publish to npm as canary release (@canary-<commit>)
        if: ${{ steps.changesets.outputs.published == 'false' && github.repository == 'tw-in-js/twind' && github.event_name == 'pull_request' && matrix.node == '18.x' }}
        continue-on-error: true
        run: |
          pnpm changeset --empty
          pnpm changeset version --no-git-tag --snapshot canary --snapshot-prerelease-template "{tag}-{commit}"
          pnpm install --lockfile-only --offline
          pnpm build
          pnpm release --tag canary --no-git-checks

      - name: üê£  Deploy preview website
        # 1. prevents this step from running on forks
        # 2. only run if this is a pull_request or pull_request_target
        # 3. only run once in the matrix
        if: ${{ github.repository == 'tw-in-js/twind' && github.event_name == 'pull_request' && matrix.node == '18.x' }}
        uses: tomjschuster/cloudflare-pages-deploy-action@v0
        continue-on-error: true
        with:
          account-id: '${{ secrets.CF_ACCOUNT_ID }}'
          api-key: '${{ secrets.CF_GLOBAL_APIKEY }}'
          email: '${{ secrets.CF_EMAIL }}'
          project-name: '${{ env.PAGES_PROJECT_NAME }}'
          preview: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          PAGES_PROJECT_NAME: twind-style

      - name: üåé  Deploy production website
        # 1. prevents this step from running on forks
        # 2. only run if this is a push to next
        # 3. only run once in the matrix
        if: ${{ github.repository == 'tw-in-js/twind' && github.event_name == 'push' && matrix.node == '18.x' }}
        # TODO: if: ${{ steps.changesets.outputs.published == 'true' }}
        uses: tomjschuster/cloudflare-pages-deploy-action@v0
        continue-on-error: true
        with:
          account-id: '${{ secrets.CF_ACCOUNT_ID }}'
          api-key: '${{ secrets.CF_GLOBAL_APIKEY }}'
          email: '${{ secrets.CF_EMAIL }}'
          project-name: '${{ env.PAGES_PROJECT_NAME }}'
          production: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          PAGES_PROJECT_NAME: twind-style

  coveralls:
    name: Collect Coverage
    needs: build
    runs-on: ubuntu-latest
    # prevents this step from running on forks
    if: ${{ github.repository == 'tw-in-js/twind' }}
    steps:
      - name: üìñ  Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
