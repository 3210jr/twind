name: CI

on:
  push:
    branches:
      # Push events on next branch
      - next

  pull_request:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    name: 🏗️  Build on Node.js v${{ matrix.node }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
    permissions:
      contents: write # to create release (changesets/action)
      pull-requests: write # to create pull request (changesets/action)

    strategy:
      matrix:
        node: ['18.x']
        # os: [ubuntu-20.04]
        # Maybe add those later again
        # os: [ubuntu-20.04, macos-11, windows-2022]

    steps:
      - name: 📥  Checkout
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: 🔧  Setup
        uses: ./.github/actions/setup
        with:
          nodeVersion: ${{ matrix.node }}

      - name: 🤘  Validate packages
        run: |
          pnpm check
          pnpm test:coverage

      - name: 🏗️  Build packages
        run: pnpm build

      - name: 📖  Coveralls
        # prevents this step from running on forks
        if: ${{ github.repository == 'tw-in-js/twind' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: build-${{ matrix.node }}
          parallel: true
          path-to-lcov: ./coverage/lcov.info

      # if a .npmrc file is found, the GitHub Action does not recreate the file.
      - name: 📝  Updating .npmrc
        # 1. prevents this step from running on forks
        # 2. only run for push events
        # 3. only run once in the matrix
        if: ${{ github.repository == 'tw-in-js/twind' && github.event_name == 'push' && matrix.node == '18.x' }}
        run: |
          cat << EOF > "$HOME/.npmrc"
            email=release-workflow@twind.style
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🚚  Create Release PR or Publish to npm
        id: changesets
        if: ${{ github.repository == 'tw-in-js/twind' && github.event_name == 'push' && matrix.node == '18.x' }}
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          publish: pnpm release --tag latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🌎  Deploy twind.style
        if: ${{ steps.changesets.outputs.published == 'true' && github.repository == 'tw-in-js/twind' }}
        uses: ./.github/actions/publish-pages
        with:
          workingDirectory: sites/twind.style
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDLFARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          deploymentName: twind.style
          projectName: twind-style
          directory: build
          branch: main

      - name: 🌎  Deploy twind.run
        if: ${{ steps.changesets.outputs.published == 'true' && github.repository == 'tw-in-js/twind' }}
        uses: ./.github/actions/publish-pages
        with:
          workingDirectory: sites/twind.run
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDLFARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          deploymentName: twind.run
          projectName: twind-run
          directory: .svelte-kit/cloudflare
          branch: main

  coveralls:
    name: Collect Coverage
    needs: build
    runs-on: ubuntu-latest
    # prevents this step from running on forks
    if: ${{ github.repository == 'tw-in-js/twind' }}
    steps:
      - name: 📖  Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  publish-pre-releases:
    name: 🚚  Publish pre-releases
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ needs.build.outputs.published != 'true' && github.repository == 'tw-in-js/twind' }}
    permissions:
      contents: read
      pull-requests: write
      deployments: write

    steps:
      - name: 📥  Checkout
        uses: actions/checkout@v3

      - name: 🔧  Setup
        uses: ./.github/actions/setup
        with:
          # only install dependencies for packages that are published and for the sites
          installArgs: --filter="." --filter="./packages/*" --filter="./sites/*"

      - name: 🚚  Publish pre-release to npm
        id: publish
        uses: ./.github/actions/publish-prerelease
        with:
          tag: ${{ (github.event_name == 'push' && 'next') || 'canary'}}
          template: ${{ (github.event_name == 'push' && '{tag}-{datetime}') || '{tag}-{commit}'}}
          hasChangesets: ${{ needs.build.outputs.hasChangesets }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # deploy sites using the published package versions
      - name: 🌎  Deploy twind.style
        id: deploy_twind_style
        uses: ./.github/actions/publish-pages
        with:
          workingDirectory: sites/twind.style
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDLFARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          deploymentName: twind.style
          projectName: twind-style
          directory: build

      - name: 🌎  Deploy twind.run
        id: deploy_twind_run
        uses: ./.github/actions/publish-pages
        with:
          workingDirectory: sites/twind.run
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDLFARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          deploymentName: twind.run
          projectName: twind-run
          directory: .svelte-kit/cloudflare

      - name: 📝  Comment PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          comment_includes: '## Deployed site previews with [![Cloudflare Pages]'
          message: |
            > **Latest commit**: ${{ github.sha }}

            ## Deployed site previews with [![Cloudflare Pages](https://img.shields.io/badge/Cloudflare%20Pages-F38020?style=for-the-badge&logo=Cloudflare&logoColor=white)](https://pages.dev)

            ### twind.style

            <table>
            <tr><td><strong>Deployment URL:</strong></td><td><a href='${{ steps.deploy_twind_style.outputs.url }}'>${{ steps.deploy_twind_style.outputs.url }}</a></td></tr>
            <tr><td><strong>Branch URL:</strong></td><td><a href='${{ steps.deploy_twind_style.outputs.branchURL }}'>${{ steps.deploy_twind_style.outputs.branchURL }}</a></td></tr>
            <tr><td><strong>Version URL:</strong></td><td><a href='${{ steps.deploy_twind_style.outputs.versionURL }}'>${{ steps.deploy_twind_style.outputs.versionURL }}</a></td></tr>
            </table>

            ### twind.run

            <table>
            <tr><td><strong>Deployment URL:</strong></td><td><a href='${{ steps.deploy_twind_run.outputs.url }}'>${{ steps.deploy_twind_run.outputs.url }}</a></td></tr>
            <tr><td><strong>Branch URL:</strong></td><td><a href='${{ steps.deploy_twind_run.outputs.branchURL }}'>${{ steps.deploy_twind_run.outputs.branchURL }}</a></td></tr>
            <tr><td><strong>Version URL:</strong></td><td><a href='${{ steps.deploy_twind_run.outputs.versionURL }}'>${{ steps.deploy_twind_run.outputs.versionURL }}</a></td></tr>
            </table>

            ## Published to [npm](https://www.npmjs.com)

            **Dist Tag**: ${{ steps.publish.output.tag }}

            **Packages**:

            ${{ steps.publish.output.packages }}
